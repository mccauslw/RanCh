% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/set_index.R
\name{set_index}
\alias{set_index}
\title{Compute set index}
\usage{
set_index(v)
}
\arguments{
\item{v}{vector of object indices, in any order}
}
\value{
An integer index corresponding to the set of objects whose indices are
elements of \code{v}.
}
\description{
\code{set_index} takes a vector \code{v} of object indices and constructs a
set index, an index for the set of objects whose indices are elements of \code{v}.
Each digit (or bit) in the binary representation of the resulting set index is
an inclusion indicator: object \eqn{i} is in the set if and only if the \eqn{i}'th
digit from the right is 1.
For example, the set with objects 1, 3, and 4 has index
equal to binary 1101, or decimal 13.
The set with elements 1, 3 and 4 can be specified as the input vector c(1,3,4) or
any permutation thereof, such as c(3,4,1).
}
\details{
Note that the singleton set with object \eqn{i} is represented as \eqn{2^{i-1}}.
The bitwise "or" (\code{bitwOr}) of the set indices of two sets is the set
index of their union; the bitwise "and" (\code{bitwAnd}), the set index
of their intersection.
}
\examples{
A <- set_index(c(1,3,4)) # Returns (decimal) 13, equal to binary 1101.
}
